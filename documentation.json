{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "DataService",
            "id": "injectable-DataService-2d0d1cc9784b8e962070af2291265d32",
            "file": "src/app/services/data.service.ts",
            "properties": [
                {
                    "name": "aboutMe",
                    "defaultValue": "{\n    parragraph1 : 'Hi, I’m Harold, I’m a Systems Engineer who likes frontend development, that is why I have estudied to develop Angular web apps with responsive designs that could work across all browsers with interfaces that are usable and pleasant for people.',\n    parragraph2 : 'I am a person who likes learn new tecnologies and that is why I have been studied some courses in Udemy like Typescript, Sass and Css, Angular, Javascript and more. Also I like help other people and that is why I have been doing tutorials about several things in github using github pages.',\n    parragraph3 : 'My professional life as a developer started building websites for small businesses with Wordpress where I learned several complementary skills such as Digital Marketing, SEO and others, also I have worked with Databases, Infraestructure and recently I was working doing banking software using Javascript, Java, SQL Databases and SCRUM Metghodology.',\n    parragraph4 : 'Right now, I’m excited about front end web development and I hope becoming better each day with new challenges and goals to meet.'\n  }",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "experience",
                    "defaultValue": "[\n    {\n      enterprise: \"Grupo TVCable\",\n      img: \"assets/img/tvcable.jfif\",\n      content: \"Intern at Grupo TVCable company, in the Systems area.  In this job, I carried out quality control activities and support in the development of new company plans handling PL / SQL. Also I use SCRUM methodology in this company\"\n    },\n    {\n      enterprise: \"PACO\",\n      img: \"assets/img/paco.png\",\n      content: \"Developer analyst at PACO comercial company. I managed the billing system developed in Java with PostgreSQL database, also handling stored procedures in the SQL Server database.\"\n    },\n    {\n      enterprise: \"ClearMinds\",\n      img: \"assets/img/clearminds.jfif\",\n      content: \"Software Developer at Clearminds company. I worked in banking software consulting services where I used Scrum Methodology and tools such as Angular, Javascript, Java, Sql Server as well as the company's own tools.\"\n    },\n    {\n      enterprise: \"Imprenta Mariscal\",\n      img:  \"assets/img/imprenta.png\",\n      content: \"Intern at Imprenta Mariscal industry, in the area of Systems and Databases. I carried out activities such as network management, computer and printer maintenance, user support, backup management, database management, among others.\"\n    }\n  ]",
                    "type": "Array<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "projects",
                    "defaultValue": "[\n    {\n      title: 'Tourism Template',\n      url: 'https://haroldmaster.github.io/borradore4f/',\n      img: 'assets/img/tourism.PNG',\n      principal: true\n    },\n    {\n      title: 'Ecuadorian Futbol Teams (Using API Rest)',\n      url: 'https://haroldmaster.github.io/LigaPro/',\n      img: 'assets/img/futbol.PNG',\n      principal: true\n    },\n    {\n      title: 'Code Verificator (Using Jest (TDD), Storybooks and Figma Template)',\n      url: 'https://haroldmaster.github.io/verifyCode/',\n      img: 'assets/img/codeVerificator.PNG',\n      principal:true\n    },\n    {\n      title: 'Calculator (Using Jest and Storybooks)',\n      url: 'https://haroldmaster.github.io/calculator/',\n      img: 'assets/img/calculator.PNG'\n    },\n    {\n      title: 'Git Tutorial',\n      url: 'https://haroldmaster.github.io/Tutorial-Git/',\n      img: 'assets/img/gitTutorial.PNG'\n    },\n    {\n      title: 'GitHub Tutorial',\n      url: 'https://haroldmaster.github.io/Tutorial-Github/',\n      img: 'assets/img/githubTutorial.PNG'\n    },\n    {\n      title: 'Javascript Methods',\n      url: 'https://haroldmaster.github.io/Tips-y-metodos-utiles-de-Javascript/',\n      img: 'assets/img/javascript.PNG'\n    },\n    {\n      title: 'Animations with Sass',\n      url: 'https://haroldmaster.github.io/sass-and-css/',\n      img: 'assets/img/sassAnimations.PNG'\n    }\n    ,\n    {\n      title: 'Animations with JQery',\n      url: 'https://haroldmaster.github.io/animaciones-eventos-jquery/',\n      img: 'assets/img/jquery.PNG'\n    },\n    {\n      title: 'Formulary using DOM',\n      url: 'https://haroldmaster.github.io/formulario-solo-con-DOM-validado/',\n      img: 'assets/img/form.PNG'\n    },\n    {\n      title: 'Using Fetch (Starwars API)',\n      url: 'https://haroldmaster.github.io/fetch/',\n      img: 'assets/img/fetch.PNG'\n    },\n    {\n      title: 'Prank',\n      url: 'https://haroldmaster.github.io/prank-propuesta/',\n      img: 'assets/img/prank.PNG'\n    }\n    \n  ]",
                    "type": "Array<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "url",
                    "defaultValue": "\"https://api.github.com/users/HaroldMaster\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAboutMe",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 109
                },
                {
                    "name": "getExperience",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112
                },
                {
                    "name": "getMyUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 106
                },
                {
                    "name": "getProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private url : string = \"https://api.github.com/users/HaroldMaster\";\n  private aboutMe: {[key:string]:string} = {\n    parragraph1 : 'Hi, I’m Harold, I’m a Systems Engineer who likes frontend development, that is why I have estudied to develop Angular web apps with responsive designs that could work across all browsers with interfaces that are usable and pleasant for people.',\n    parragraph2 : 'I am a person who likes learn new tecnologies and that is why I have been studied some courses in Udemy like Typescript, Sass and Css, Angular, Javascript and more. Also I like help other people and that is why I have been doing tutorials about several things in github using github pages.',\n    parragraph3 : 'My professional life as a developer started building websites for small businesses with Wordpress where I learned several complementary skills such as Digital Marketing, SEO and others, also I have worked with Databases, Infraestructure and recently I was working doing banking software using Javascript, Java, SQL Databases and SCRUM Metghodology.',\n    parragraph4 : 'Right now, I’m excited about front end web development and I hope becoming better each day with new challenges and goals to meet.'\n  };\n  private experience: Array<{[key:string]:string}>= [\n    {\n      enterprise: \"Grupo TVCable\",\n      img: \"assets/img/tvcable.jfif\",\n      content: \"Intern at Grupo TVCable company, in the Systems area.  In this job, I carried out quality control activities and support in the development of new company plans handling PL / SQL. Also I use SCRUM methodology in this company\"\n    },\n    {\n      enterprise: \"PACO\",\n      img: \"assets/img/paco.png\",\n      content: \"Developer analyst at PACO comercial company. I managed the billing system developed in Java with PostgreSQL database, also handling stored procedures in the SQL Server database.\"\n    },\n    {\n      enterprise: \"ClearMinds\",\n      img: \"assets/img/clearminds.jfif\",\n      content: \"Software Developer at Clearminds company. I worked in banking software consulting services where I used Scrum Methodology and tools such as Angular, Javascript, Java, Sql Server as well as the company's own tools.\"\n    },\n    {\n      enterprise: \"Imprenta Mariscal\",\n      img:  \"assets/img/imprenta.png\",\n      content: \"Intern at Imprenta Mariscal industry, in the area of Systems and Databases. I carried out activities such as network management, computer and printer maintenance, user support, backup management, database management, among others.\"\n    }\n  ];\n\n  private projects: Array<{[key:string]:string | boolean}> = [\n    {\n      title: 'Tourism Template',\n      url: 'https://haroldmaster.github.io/borradore4f/',\n      img: 'assets/img/tourism.PNG',\n      principal: true\n    },\n    {\n      title: 'Ecuadorian Futbol Teams (Using API Rest)',\n      url: 'https://haroldmaster.github.io/LigaPro/',\n      img: 'assets/img/futbol.PNG',\n      principal: true\n    },\n    {\n      title: 'Code Verificator (Using Jest (TDD), Storybooks and Figma Template)',\n      url: 'https://haroldmaster.github.io/verifyCode/',\n      img: 'assets/img/codeVerificator.PNG',\n      principal:true\n    },\n    {\n      title: 'Calculator (Using Jest and Storybooks)',\n      url: 'https://haroldmaster.github.io/calculator/',\n      img: 'assets/img/calculator.PNG'\n    },\n    {\n      title: 'Git Tutorial',\n      url: 'https://haroldmaster.github.io/Tutorial-Git/',\n      img: 'assets/img/gitTutorial.PNG'\n    },\n    {\n      title: 'GitHub Tutorial',\n      url: 'https://haroldmaster.github.io/Tutorial-Github/',\n      img: 'assets/img/githubTutorial.PNG'\n    },\n    {\n      title: 'Javascript Methods',\n      url: 'https://haroldmaster.github.io/Tips-y-metodos-utiles-de-Javascript/',\n      img: 'assets/img/javascript.PNG'\n    },\n    {\n      title: 'Animations with Sass',\n      url: 'https://haroldmaster.github.io/sass-and-css/',\n      img: 'assets/img/sassAnimations.PNG'\n    }\n    ,\n    {\n      title: 'Animations with JQery',\n      url: 'https://haroldmaster.github.io/animaciones-eventos-jquery/',\n      img: 'assets/img/jquery.PNG'\n    },\n    {\n      title: 'Formulary using DOM',\n      url: 'https://haroldmaster.github.io/formulario-solo-con-DOM-validado/',\n      img: 'assets/img/form.PNG'\n    },\n    {\n      title: 'Using Fetch (Starwars API)',\n      url: 'https://haroldmaster.github.io/fetch/',\n      img: 'assets/img/fetch.PNG'\n    },\n    {\n      title: 'Prank',\n      url: 'https://haroldmaster.github.io/prank-propuesta/',\n      img: 'assets/img/prank.PNG'\n    }\n    \n  ]\n  constructor(private _http : HttpClient) { }\n   getMyUser(){\n    return this._http.get(this.url);\n   }\n   getAboutMe(){\n     return this.aboutMe;\n   }\n   getExperience(){\n     return this.experience;\n   }\n   getProjects(){\n     return this.projects;\n   }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_http",
                        "type": "HttpClient"
                    }
                ],
                "line": 104,
                "jsdoctags": [
                    {
                        "name": "_http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-ee2067dfb1c303f41003aea7d82d51e0",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutMeComponent",
            "id": "component-AboutMeComponent-bb352519de6d0a0dcf675e260ea6dbe6",
            "file": "src/app/components/about-me/about-me.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about-me",
            "styleUrls": [
                "./about-me.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-me.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "about",
                    "line": 12,
                    "type": "literal type"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent implements OnInit {\n  \n  @Input()\n  about !: {[key:string]:string};\n  ngOnInit(): void {\n    console.log(this.about)\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    width: 50%;\r\n    @media only screen and (max-width: 56.25em) { \r\n        width: 100% ;\r\n       }; \r\n}\r\n.content__aboutme{\r\n    padding: 1rem;\r\n    font-size: 1.6rem;\r\n    margin: .5rem;\r\n    &-content{\r\n        font-size: 1.6rem;\r\n        margin: .5rem;\r\n        text-align: justify;\r\n        font-weight: 400;\r\n        \r\n    }\r\n    &-img{\r\n        overflow: hidden;\r\n        width: 100%;\r\n        height: 12rem;\r\n        display: flex;  \r\n        justify-content: space-between;\r\n        &>img{\r\n            width: 20%;\r\n            object-fit: contain;\r\n        }\r\n    }\r\n    &>h2{\r\n        margin-bottom: 2rem;\r\n    }\r\n    &-languages{\r\n        font-size: 1.6rem;\r\n        font-weight: 400;\r\n    }\r\n}\r\n",
                    "styleUrl": "./about-me.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"content__aboutme\">\n    <h2>About Me</h2>\n    <div class=\"content__aboutme-content\" *ngFor=\"let parragraph of about | keyvalue\">\n        <p>{{parragraph.value}}</p>\n    </div>\n    <div class=\"content__aboutme-img\">\n        <img src=\"assets/img/angular.png\" alt=\"\" srcset=\"\">\n        <img src=\"assets/img/css.png\" alt=\"\" srcset=\"\">\n        <img src=\"assets/img/sass.png\" alt=\"\" srcset=\"\">\n        <img src=\"assets/img/typescript.png\" alt=\"\" srcset=\"\">\n    </div>\n    <div class=\"content__aboutme-languages\">\n        <h3>Languages</h3>\n        <p>English - B1 Certificate</p>\n    </div>\n    <div class=\"button-animated\">\n        <a href=\"#popup\">View All Certificates</a>\n    </div>\n    \n</section>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c68c576918fc08765006631ad5e04b00",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "about",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "experience",
                    "type": "Array<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "projects",
                    "type": "Array<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "user",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { CloneVisitor } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataService } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  user !: Observable<any>;\n  about !: {[key:string]:string};\n  experience !: Array<{[key:string]:string}>;\n  projects !: Array<{[key:string]:string | boolean}>;\n  constructor(private _datos: DataService ){\n  }\n\n  ngOnInit(){\n    this.user = this._datos.getMyUser();\n    this.about = this._datos.getAboutMe();\n    this.experience = this._datos.getExperience();\n    this.projects = this._datos.getProjects();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bg-video{\r\n    position: fixed;\r\n    top: 0;\r\n    left:0;\r\n    height: 100%;\r\n    width:100%;\r\n    z-index: -1;\r\n    opacity: 2;\r\n    &__content {\r\n        width: 100%;\r\n        height: 100%; \r\n        object-fit: fill;\r\n    }\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "_datos",
                        "type": "DataService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_datos",
                        "type": "DataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"bg-video\">\n  <video class=\"bg-video__content\"   autoplay muted loop>\n    <source src=\"../assets/videos/bg.mp4\" type=\"video/mp4\">\n  </video>\n</div>\n<app-main [haroldGit] = \"user\" [about]=\"about\" [experience]=\"experience\" [projects]=\"projects\"></app-main>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CertificatesComponent",
            "id": "component-CertificatesComponent-5d01946a776dfe90e438ab00ad7c1438",
            "file": "src/app/components/certificates/certificates.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-certificates",
            "styleUrls": [
                "./certificates.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./certificates.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "carousel",
                    "type": "NgbCarousel",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'carousel', {static: true}"
                        }
                    ]
                },
                {
                    "name": "images",
                    "defaultValue": "[\n    'angularBasic',\n    'cssSass',\n    'typescriptCertificate',\n    'angularTest',\n    'degree',\n    'English',\n    'html5',\n    'Java',\n    'sql',\n    'Google',\n    'BPMN',\n  ].map((n) => `../../../assets/img/${n}.PNG`)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "paused",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "pauseOnFocus",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "pauseOnHover",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "pauseOnIndicator",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "unpauseOnArrow",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "onSlide",
                    "args": [
                        {
                            "name": "slideEvent",
                            "type": "NgbSlideEvent"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "slideEvent",
                            "type": "NgbSlideEvent",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "togglePaused",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\nimport {\n  NgbCarousel,\n  NgbSlideEvent,\n  NgbSlideEventSource,\n} from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss'],\n})\nexport class CertificatesComponent {\n  images = [\n    'angularBasic',\n    'cssSass',\n    'typescriptCertificate',\n    'angularTest',\n    'degree',\n    'English',\n    'html5',\n    'Java',\n    'sql',\n    'Google',\n    'BPMN',\n  ].map((n) => `../../../assets/img/${n}.PNG`);\n\n  paused = false;\n  unpauseOnArrow = false;\n  pauseOnIndicator = false;\n  pauseOnHover = true;\n  pauseOnFocus = true;\n\n  @ViewChild('carousel', { static: true }) carousel!: NgbCarousel;\n\n  togglePaused() {\n    if (this.paused) {\n      this.carousel.cycle();\n    } else {\n      this.carousel.pause();\n    }\n    this.paused = !this.paused;\n  }\n\n  onSlide(slideEvent: NgbSlideEvent) {\n    if (\n      this.unpauseOnArrow &&\n      slideEvent.paused &&\n      (slideEvent.source === NgbSlideEventSource.ARROW_LEFT ||\n        slideEvent.source === NgbSlideEventSource.ARROW_RIGHT)\n    ) {\n      this.togglePaused();\n    }\n    if (\n      this.pauseOnIndicator &&\n      !slideEvent.paused &&\n      slideEvent.source === NgbSlideEventSource.INDICATOR\n    ) {\n      this.togglePaused();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".carousel{\r\n    width: 70%;\r\n    height: 65rem;\r\n    margin: auto;\r\n    \r\n    &__img{\r\n        width: 100%;\r\n        height: 55rem;\r\n        max-height: 55rem;\r\n        object-fit: contain;\r\n        position: relative;\r\n        margin-top: 3.8rem;\r\n        padding: 3rem;\r\n        left: 50%;\r\n        transform: translate(-50%);\r\n        @media only screen and (max-width: 56.25em) { \r\n            padding: 6.5rem;\r\n           };  \r\n    }\r\n}\r\n.content{\r\n    position: relative;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n.popup {\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    transition: opacity 500ms;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n\r\n    &:target {\r\n    visibility: visible;\r\n    opacity: 1;\r\n  }\r\n  &__close {\r\n      color: white;\r\n      font-size: 3rem;\r\n      position: relative;\r\n      float: right;\r\n      margin-right: 2rem;\r\n      z-index: 10;\r\n      &:hover{\r\n          transform: scale(1.5);\r\n          text-decoration: none;\r\n          transition: transform .25s;\r\n      }\r\n  }\r\n}\r\n",
                    "styleUrl": "./certificates.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"popup\" id=\"popup\">\n    <div class=\"content\">\n        <a class=\"popup__close\" href=\"/#\">&times;</a>\n        <ngb-carousel class=\"carousel\" #carousel [interval]=\"2500\" [pauseOnHover]=\"pauseOnHover\" [pauseOnFocus]=\"pauseOnFocus\" (slide)=\"onSlide($event)\">            \n            <ng-template ngbSlide *ngFor=\"let img of images; index as i\">\n                <div class=\"picsum-img-wrapper\">\n                  <img class=\"carousel__img\" [src]=\"img\" alt=\"My image {{i + 1}} description\">\n                </div>\n            </ng-template>\n          </ngb-carousel>\n    </div>\n</div>\n\n  "
        },
        {
            "name": "ExperienceComponent",
            "id": "component-ExperienceComponent-fa732989635e3478420b3ae396b1a38d",
            "file": "src/app/components/experience/experience.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-experience",
            "styleUrls": [
                "./experience.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./experience.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "experience",
                    "line": 10,
                    "type": "Array<literal type>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "view",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "changeView",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, ContentChild, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.scss']\n})\nexport class ExperienceComponent implements OnInit{\n  @Input()\n  experience !: Array<{[key:string]:string}>;\n  view : boolean = false;\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n  changeView(){\n  this.view = !this.view;\n   let change =  document.getElementById(\"content__experience-3\");\n   let changeButton =  document.getElementById(\"experience__button\");\n   if(changeButton){\n    if(change){\n      if(this.view){\n       changeButton.innerHTML = \"View Less\"\n       change.classList.add(\"show\");\n      }\n      else{\n       changeButton.innerHTML = \"View More\"\n       change.classList.remove(\"show\");\n      }\n    }\n   }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n    width: 50%;\r\n    @media only screen and (max-width: 56.25em) { \r\n        width: 100% ;\r\n       };  \r\n}\r\n.content__experience{\r\n    border-left: 0.1rem solid black;\r\n    padding: 1rem;\r\n    margin: .5rem;\r\n    overflow: hidden;\r\n    @media only screen and (max-width: 56.25em) { \r\n        border:none\r\n       }; \r\n    &__card{\r\n        margin: 1rem;\r\n        height: fit-content;\r\n        overflow: hidden;\r\n        transition: all .5s;\r\n        &:hover{\r\n            box-shadow:  6px 6px 11px #ababab,\r\n             -6px -6px 11px #ffffff;\r\n        }\r\n        &-text{\r\n            font-size: 1.6rem;\r\n            text-align: justify;\r\n            font-family: 'Mulish', sans-serif;\r\n            font-weight: 400;\r\n        }\r\n        &-enterprise{\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n    &-3{\r\n        display: none;\r\n    }\r\n}\r\n\r\n.show{\r\n   display: block;\r\n   animation-name: show;\r\n   animation-duration: 1s;\r\n}\r\n",
                    "styleUrl": "./experience.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"content__experience\">\n    <h2>Experience</h2>\n    <div *ngFor=\"let experience of experience; let i=index\">\n      <div  class=\"content__experience-{{i}}\" id=\"content__experience-{{i}}\">\n        <div>\n          <mat-card class=\"content__experience__card\">\n            <mat-card-header>\n                <div\n                    mat-card-avatar class=\"mat-card-avatar-white\"\n                    [ngStyle]=\"{\n                    'background-image': 'url(' + experience.img + ')',\n                    'background-size': 'cover'\n                    }\">\n                </div>\n              <mat-card-title class=\"content__experience__card-enterprise\" >{{ experience.enterprise }}</mat-card-title>\n            </mat-card-header>\n            <br />\n            <mat-card-content class=\"content__experience__card-text\">\n              <p>\n                {{ experience.content }}\n              </p>\n            </mat-card-content>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n    <div class=\"button-animated\">\n      <button id=\"experience__button\" (click)=\"changeView()\">View More</button>\n    </div>\n</section>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-eac28c405902f08df4163f77953befa4",
            "file": "src/app/components/main/main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "about",
                    "line": 13,
                    "type": "literal type"
                },
                {
                    "name": "experience",
                    "line": 15,
                    "type": "Array<literal type>"
                },
                {
                    "name": "haroldGit",
                    "line": 11,
                    "type": "Observable<any>"
                },
                {
                    "name": "projects",
                    "line": 17,
                    "type": "Array<literal type>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  @Input()\n  haroldGit !: Observable<any>;\n  @Input()\n  about !: {[key:string]:string};\n  @Input()\n  experience !: Array<{[key:string]:string}>;\n  @Input()\n  projects !: Array<{[key:string]:string | boolean}>;\n  ngOnInit(): void {\n  }\n \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main-container{\r\n    border-radius: 3rem; \r\n    width: 80%;\r\n    margin: auto;\r\n    margin-top: 2rem;\r\n    margin-bottom: 2rem;\r\n    height: fit-content;\r\n    background: white;\r\n    overflow: hidden;\r\n}\r\n.main-header{\r\n    margin: auto;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    &__links {\r\n        margin: 1rem;\r\n        &>a{\r\n            margin: 1rem;\r\n            color: black;\r\n        }\r\n    }\r\n    &__content{\r\n        &__nombre{\r\n            font-size: 5rem;\r\n        }\r\n    }\r\n}\r\n.content{\r\n    width: 100%;\r\n    display:flex;\r\n    font-weight: 100;\r\n    line-height: 2.4rem;\r\n    @media only screen and (max-width: 56.25em) { \r\n        flex-direction: column;\r\n       }; \r\n}\r\ni{\r\n    font-size: 4rem;\r\n    transition: all .4s;\r\n    &:hover{\r\n        transform: scale(1.2);\r\n    }\r\n}\r\n",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main-container\">\n    <section class=\"main-header\">\n        <div class=\"main-header__content\" *ngIf=\"haroldGit | async as harold\">\n            <h1 class='main-header__content__nombre'>{{ harold.name }}</h1>\n            <p class='main-header__content__descripcion' >{{ harold.bio }}</p>\n            <div class=\"main-header__links\">\n                <a href=\"https://github.com/HaroldMaster\" target=\"_blank\">\n                    <i class=\"fab fa-github\"></i>\n                </a>\n                <a href=\"mailto:bhflores1994@gmail.com\" target=\"_blank\">\n                    <i class=\"fas fa-envelope-square\"></i>\n                </a>\n                <a href=\"https://api.whatsapp.com/send?phone=593999981332\" target=\"_blank\">\n                    <i class=\"fab fa-whatsapp\"></i>\n                </a>\n            </div>\n        </div>\n    </section>\n    <hr>\n    <div class=\"content\">\n        <app-about-me [about]=\"about\"></app-about-me>\n        <app-experience [experience]=\"experience\"></app-experience>\n    </div>\n \n    <app-projects [projects]=\"projects\"></app-projects>\n    <app-certificates></app-certificates>\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 64,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProjectsComponent",
            "id": "component-ProjectsComponent-d46c1fe47ac21d28b4ccfaf3b972c119",
            "file": "src/app/components/projects/projects.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-projects",
            "styleUrls": [
                "./projects.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "projects",
                    "line": 10,
                    "type": "Array<literal type>"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "view",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "viewMoreProjects",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  @Input()\n  projects !: Array<{[key:string]:string | boolean}>;\n  view : boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"Projects\",this.projects)\n  }\n  viewMoreProjects(){\n    this.view = !this.view;\n    let button = document.getElementById(\"button-projects\");\n    if(this.view){\n      if(button) button.innerHTML=\"View Less\"\n      this.projects.map(e=>{\n        e.principal =true;\n      })\n    }\n    else {\n      if(button) button.innerHTML=\"View More\";\n      this.projects.forEach((element,index)=>{\n        if(index>=3) element.principal=false;\n      })\n    }\n    \n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".projects{\r\n    border-top: 1px solid black;\r\n    margin-left: 1rem;\r\n    &__title{\r\n        text-align: center;\r\n        margin: 1rem;\r\n    }\r\n    &__highlights{\r\n        font-size: 1.6rem;\r\n        margin: 1rem;\r\n        text-align: justify;\r\n        &>h3{\r\n            font-weight: 600;\r\n        }\r\n        &>ul>li{\r\n            margin-left: 3rem;\r\n            margin-right: 2rem;\r\n        }\r\n        &>ul>li>a{\r\n            word-wrap: break-word;\r\n        }\r\n    }\r\n    &__programs{\r\n        display: flex;\r\n        justify-content:space-around;\r\n        flex-wrap: wrap ;\r\n        overflow: hidden;\r\n       \r\n        &-container {\r\n            margin: 2rem;\r\n            display: none;\r\n        }\r\n        &-img{\r\n            border: 2px solid black;\r\n            border-radius: 1rem;\r\n            overflow: hidden;\r\n            transition: all .5s;\r\n            &:hover{\r\n                transform: scale(1.1);\r\n            }\r\n        }\r\n        &-img>a>img{\r\n            width: 30rem;\r\n            height: 17rem;\r\n        }\r\n        &-title{\r\n            margin-top: 1.1rem;\r\n            max-width: 20rem;\r\n            position: relative;\r\n            text-align: center;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n        }\r\n        \r\n    }\r\n}\r\n.visible{\r\n    display: inherit;\r\n    animation: show 1s;\r\n}",
                    "styleUrl": "./projects.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"projects\">\n    <h2 class=\"projects__title\">Personal Projects And HighLights</h2>\n    <div class=\"projects__highlights\">\n        <h3>Publications</h3>\n        <ul>\n            <li>\n                Publication of a scientific article in the IEEE database with the topic: Serious Game, Gamified Applications, Educational Software: A Comparative Study (10.1109 / ICI2ST.2019.00015)\n               <a href=\"https://ieeexplore.ieee.org/document/8940385\" target=\"_blank\">https://ieeexplore.ieee.org/document/8940385</a>\n            </li>\n        </ul>\n        <h3>Personal Projects</h3>\n        <div class=\"projects__programs\" >\n            <div [class.visible]=\"project.principal\" class=\"projects__programs-container\" *ngFor=\"let project of projects\">\n                <div >\n                    <div class=\"projects__programs-img\" >\n                        <a [href]=\"project.url\" target=\"_blank\"><img [src]=\"project.img\" alt=\"\"></a>\n                    </div>\n                    <div class=\"projects__programs-title\" >\n                        <h4>{{project.title}}</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"button-animated\">\n            <button  id=\"button-projects\" (click)=\"viewMoreProjects()\">View More</button>\n        </div>\n    </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutMeComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CertificatesComponent"
                        },
                        {
                            "name": "ExperienceComponent"
                        },
                        {
                            "name": "MainComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mainCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/experience/experience.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n      component: ExperienceComponent,\r\n      props: {\r\n        experience:  [\r\n            {\r\n              enterprise: \"Grupo TVCable\",\r\n              img: \"assets/img/tvcable.jfif\",\r\n              content: \"Intern at Grupo TVCable company, in the Systems area.  In this job, I carried out quality control activities and support in the development of new company plans handling PL / SQL. Also I use SCRUM methodology in this company\"\r\n            }\r\n        ]\r\n      },\r\n})"
            },
            {
                "name": "mainCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/certificates/certificates.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n      component: CertificatesComponent,\r\n      props: {\r\n         \r\n\r\n      },\r\n})"
            },
            {
                "name": "mainCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/about-me/about-me.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n      component: AboutMeComponent,\r\n      props: {\r\n        about: {\r\n            parragraph1 : 'Hi, I’m Harold, I’m a Systems Engineer who likes frontend development, that is why I have estudied to develop Angular web apps with responsive designs that could work across all browsers with interfaces that are usable and pleasant for people.',\r\n        }\r\n      },\r\n})"
            },
            {
                "name": "mainCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/projects/projects.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n      component: ProjectsComponent,\r\n      props: {\r\n        projects:  [\r\n            {\r\n                title: 'Tourism Template',\r\n                url: 'https://haroldmaster.github.io/borradore4f/',\r\n                img: 'assets/img/tourism.PNG',\r\n                principal: true\r\n              }\r\n        ]\r\n      },\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/components/experience/experience.stories.ts": [
                {
                    "name": "mainCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/experience/experience.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n      component: ExperienceComponent,\r\n      props: {\r\n        experience:  [\r\n            {\r\n              enterprise: \"Grupo TVCable\",\r\n              img: \"assets/img/tvcable.jfif\",\r\n              content: \"Intern at Grupo TVCable company, in the Systems area.  In this job, I carried out quality control activities and support in the development of new company plans handling PL / SQL. Also I use SCRUM methodology in this company\"\r\n            }\r\n        ]\r\n      },\r\n})"
                }
            ],
            "src/app/components/certificates/certificates.stories.ts": [
                {
                    "name": "mainCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/certificates/certificates.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n      component: CertificatesComponent,\r\n      props: {\r\n         \r\n\r\n      },\r\n})"
                }
            ],
            "src/app/components/about-me/about-me.stories.ts": [
                {
                    "name": "mainCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/about-me/about-me.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n      component: AboutMeComponent,\r\n      props: {\r\n        about: {\r\n            parragraph1 : 'Hi, I’m Harold, I’m a Systems Engineer who likes frontend development, that is why I have estudied to develop Angular web apps with responsive designs that could work across all browsers with interfaces that are usable and pleasant for people.',\r\n        }\r\n      },\r\n})"
                }
            ],
            "src/app/components/projects/projects.stories.ts": [
                {
                    "name": "mainCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/projects/projects.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n      component: ProjectsComponent,\r\n      props: {\r\n        projects:  [\r\n            {\r\n                title: 'Tourism Template',\r\n                url: 'https://haroldmaster.github.io/borradore4f/',\r\n                img: 'assets/img/tourism.PNG',\r\n                principal: true\r\n              }\r\n        ]\r\n      },\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/about-me/about-me.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutMeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/about-me/about-me.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mainCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/certificates/certificates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CertificatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/certificates/certificates.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mainCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/experience/experience.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExperienceComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/experience/experience.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mainCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/projects/projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/projects/projects.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mainCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DataService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}